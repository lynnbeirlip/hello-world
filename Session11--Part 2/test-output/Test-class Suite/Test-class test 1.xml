<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="THR028" ignored="0" name="Test-class test 1" tests="1" failures="0" timestamp="13 Jul 2017 18:03:42 GMT" time="0.031" errors="0">
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="Examples.ParallelSuiteTest">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a BeforeTest annotated beforeTest.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a BeforeTest annotated beforeTest.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
... Removed 12 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="Examples.ParallelSuiteTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@AfterClass afterClass" time="0.0" classname="Examples.ParallelSuiteTest">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="Examples.ParallelSuiteTest">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="testMethodOne" time="0.0" classname="Examples.ParallelSuiteTest">
    <skipped/>
  </testcase> <!-- testMethodOne -->
</testsuite> <!-- Test-class test 1 -->
